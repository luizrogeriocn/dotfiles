#!/usr/bin/env bash
LOG="dotfiles.log"
GITHUB_USER=luizrogeriocn
GITHUB_REPO=".dotfiles"
DIR="${HOME}/../usr/local/opt/${GITHUB_REPO}"

_process() {
  echo "$(date) PROCESSING:  $@" >> $LOG
  printf "$(tput setaf 6) %s...$(tput sgr0)\n" "$@"
}

_success() {
  local message=$1
  printf "%s✓ Success:%s\n" "$(tput setaf 2)" "$(tput sgr0) $message"
}

download_dotfiles() {
  _process "→ Creating directory at ${DIR} and setting permissions"
  mkdir -p "${DIR}"

  _process "→ Downloading repository to /tmp directory"
  curl -#fLo ${GITHUB_REPO}.tar.gz "https://github.com/${GITHUB_USER}/${GITHUB_REPO}/tarball/main"

  _process "→ Extracting files to ${DIR}"
  tar -zxf ${GITHUB_REPO}.tar.gz --strip-components 1 -C "${DIR}"

  _process "→ Removing tarball from /tmp directory"
  rm -rf ${GITHUB_REPO}.tar.gz

  [[ $? ]] && _success "${DIR} created, repository downloaded and extracted"

  # Change to the dotfiles directory
  cd "${DIR}"
}
link_dotfiles() {
  # symlink files to the HOME directory.
  if [[ -f "${DIR}/opt/files" ]]; then
    _process "→ Symlinking dotfiles in /configs"

    # Set variable for list of files
    files="${DIR}/opt/files"

    # Store IFS separator within a temp variable
    OIFS=$IFS
    # Set the separator to a carriage return & a new line break
    # read in passed-in file and store as an array
    IFS=$'\r\n'
    links=($(cat "${files}"))

    # Loop through array of files
    for index in ${!links[*]}
    do
      for link in ${links[$index]}
      do
        _process "→ Linking ${links[$index]}"
        # set IFS back to space to split string on
        IFS=$' '
        # create an array of line items
        file=(${links[$index]})
        # Create symbolic link
        ln -fs "${DIR}/${file[0]}" "${HOME}/${file[1]}"
      done
      # set separater back to carriage return & new line break
      IFS=$'\r\n'
    done

    # Reset IFS back
    IFS=$OIFS

    #source "${HOME}/.bashrc"

    [[ $? ]] && _success "All files have been copied"
  fi
}

install_silversearcher() {
  if ! type -P 'ag' &> /dev/null; then
    _process "→ Installing silversearcher-ag"

    pkg install silversearcher-ag

    [[ $? ]] \
    && _success "Installed silversearcher-ag"
  fi
}

install_fzf() {
  if ! type -P 'fzf' &> /dev/null; then
    _process "→ Installing fzf"

    pkg install fzf

    [[ $? ]] \
    && _success "Installed fzf"
  fi
}

install_fdfind() {
  if ! type -P 'fd' &> /dev/null; then
    _process "→ Installing fdfind"

    pkg install fd

    [[ $? ]] \
    && _success "Installed fdfind"
  fi
}

install_zsh() {
  if ! type -P 'zsh' &> /dev/null; then
    _process "→ Installing zsh"

    pkg install zsh

    _process "→ Installing ohmyzsh"
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

    [[ $? ]] \
    && _success "Installed zsh"
  fi
}

install() {
  install_silversearcher
  install_fzf
  install_fdfind
  install_zsh

  download_dotfiles
  link_dotfiles
}

install
